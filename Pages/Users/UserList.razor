@page "/users"
@inject Restaurant.Services.UserService UserService
@inject NavigationManager NavManager

<h2 class="mb-4">User List</h2>

<div class="d-flex justify-content-between align-items-center mb-3">
    <button class="btn btn-primary" @onclick='() => NavManager.NavigateTo("/users/edit/0")'>
        <i class="bi bi-plus-lg"></i> Add New User
    </button>
</div>

@if (users == null || !users.Any())
{
    <div class="alert alert-info">No users found.</div>
}
else
{
    <table class="table table-hover align-middle">
        <thead class="table-light">
            <tr>
                <th>Name</th>
                <th style="width:120px;">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.Name</td>
                    <td>
                        <button class="btn btn-sm btn-outline-secondary" 
                                @onclick='() => NavManager.NavigateTo($"/users/edit/{user.UserId}")'
                                title="Edit User">
                            <i class="bi bi-pencil"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<User> users = new();

    protected override async Task OnInitializedAsync()
    {
        users = await UserService.GetAllAsync();
    }
}

