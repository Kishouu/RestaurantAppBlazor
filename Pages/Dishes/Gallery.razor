@page "/gallery"
@inject DishService DishService
@inject NavigationManager NavManager

<h2 class="mb-4 text-primary fw-bold">Dish Gallery</h2>

@if (dishes == null || !dishes.Any())
{
    <div class="alert alert-info" role="alert">
        No dishes available to display.
    </div>
}
else
{
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4">
        @foreach (var dish in dishes)
        {
            <div class="col">
                <div class="card h-100 shadow-sm">
                    @if (!string.IsNullOrEmpty(dish.ImagePath))
                    {
                        <img src="@dish.ImagePath" class="card-img-top" alt="@dish.Name" style="object-fit: cover; height: 180px;" />
                    }
                    else
                    {
                        <div class="bg-secondary text-white d-flex align-items-center justify-content-center" style="height: 180px;">
                            <span>No Image</span>
                        </div>
                    }
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@dish.Name</h5>
                        <p class="card-text text-success fw-semibold">@dish.Price.ToString("C")</p>
                        <button class="btn btn-outline-primary mt-auto" @onclick="() => ViewDetails(dish.DishId)" aria-label="View details for @dish.Name">
                            View Details
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<Dish> dishes = new();

    protected override async Task OnInitializedAsync()
    {
        dishes = await DishService.GetAllAsync();
    }

    private void ViewDetails(int id)
    {
        NavManager.NavigateTo($"/dishes/{id}");
    }
}

